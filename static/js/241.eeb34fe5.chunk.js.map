{"version":3,"file":"static/js/241.eeb34fe5.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/contactForm/ContactForm.module.css?fd94","components/contactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactList/ContactList.module.css?7e3b","components/contactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","    export const selectContacts = state => state.contacts;\n    export const selectFilterValue = state => state.filter.status;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"form__title\":\"ContactForm_form__title__FaPz5\",\"form__form\":\"ContactForm_form__form__wbaxy\",\"form__label\":\"ContactForm_form__label__Q6RGc\",\"form__input\":\"ContactForm_form__input__5N0Q5\",\"form__btn\":\"ContactForm_form__btn__BPa9r\"};","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAsyncContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n    \n        const handleSubmit = e => {\n        e.preventDefault();\n    \n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        const id = nanoid();\n        let exist = false;\n    \n        if (Array.isArray(contacts)) {\n            contacts.forEach(contact => {\n            if (contact.name.toLowerCase().trim() === name.toLowerCase().trim()) {\n                alert(`${name} is already in contacts`);\n                exist = true;\n            }\n            });\n        }\n    \n        if (!exist) {\n            dispatch(addAsyncContact ({ id, name, number }));\n        }\n        e.target.reset();\n        };\n\n    return (\n        <>\n        <div className={css.form}>\n    <h1 className={css.form__title}>Phonebook</h1>\n    <form className={css.form__form} onSubmit={handleSubmit}>\n        <label className={css.form__label} htmlFor={\"name\"}>\n            Name\n        </label>\n        <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            className={css.form__input}\n            pattern=\"[A-Za-zÀ-ÖØ-öø-ÿ]+(?:\\s[A-Za-zÀ-ÖØ-öø-ÿ]+)?\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Adrian Smith\"\n            autoComplete=\"name\"\n            required\n        />\n        <label className={css.form__label} htmlFor={\"number\"}>\n            Number\n        </label>\n        <input\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            className={css.form__input}\n            placeholder=\"+48 123-456-789\"\n            autoComplete=\"tel\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n        />\n        <button className={css.form__btn} type=\"submit\">\n            Add contact\n        </button>\n    </form>\n</div>\n        </>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__z+x9X\",\"filter__input\":\"Filter_filter__input__HeWjX\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filterSlice';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <h2>Find contacts by name</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onFilterChange}\n        className={css.filter__input}\n        placeholder=\"Adrian Smith\"\n      ></input>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__ho4c2\",\"contacts__list\":\"ContactList_contacts__list__RNK-B\",\"contacts__item\":\"ContactList_contacts__item__ikz61\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { fetchContacts, deleteAsyncContact } from '../../redux/contacts/operations';\nimport { selectContacts, selectFilterValue } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilterValue);\n\n  const filteredContacts = Array.isArray(contacts)\n    ? contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n    : [];\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteClick = contactId => {\n    try {\n      dispatch(deleteAsyncContact(contactId));\n    } catch (error) {\n      console.error('Error deleting contact:', error.message);\n    }\n  };\n\n  return (\n    <div className={css.contacts}>\n      <h2>Contacts</h2>\n      <ul className={css.contacts__list}>\n        {filteredContacts.map((contact) => (\n          <li className={css.contacts__item} key={JSON.stringify(contact)}>\n            {contact.name} : {contact.number}{' '}\n            <button onClick={() => handleDeleteClick(contact.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { ContactForm } from \"components/contactForm/ContactForm\";\nimport { Filter } from \"components/filter/Filter\";\nimport { ContactList } from \"components/contactList/ContactList\";\n\nconst ContactsPage = () => {\n    return (\n        <>\n            <div className=\"container\">\n                <ContactForm />\n                <Filter />\n                <ContactList />\n            </div>\n        </>\n    );\n};\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","selectFilterValue","filter","status","ContactForm","useSelector","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","className","css","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","id","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","exist","Array","isArray","forEach","contact","toLowerCase","trim","alert","concat","addAsyncContact","target","reset","htmlFor","type","pattern","title","placeholder","autoComplete","required","Filter","onChange","filterContact","ContactList","filterValue","filteredContacts","includes","useEffect","fetchContacts","map","onClick","contactId","deleteAsyncContact","error","console","message","handleDeleteClick","JSON","stringify"],"sourceRoot":""}